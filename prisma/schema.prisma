// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  password  String   @db.String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name  String  @db.String
  bio   String? @db.String
  image String? @db.String



  posts    Post[]
  likes    Like[]
  comments Comment[]
}

model Post {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  content   String   @db.String
  image     String?  @db.String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  author   User   @relation(fields: [authorId], references: [id])
  authorId String @db.ObjectId

  likes    Like[]
  comments Comment[]
}

model Like {
  id     String   @id @default(auto()) @map("_id") @db.ObjectId

  user  User @relation(fields: [userId], references: [id],onDelete: Cascade)
  userId String @db.ObjectId

  post  Post @relation(fields: [postId], references: [id],onDelete: Cascade)
  postId String @db.ObjectId

  @@index([userId])
  @@index([postId])
}

model Comment {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  author   User   @relation(fields: [authorId], references: [id])
  authorId String @db.ObjectId

  post   Post   @relation(fields: [postId], references: [id])
  postId String @db.ObjectId
}
